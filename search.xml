<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>2023春汇编实验（拓展题）</title>
      <link href="/2023/09/06/2023-chun-hui-bian-shi-yan-tuo-zhan-ti/"/>
      <url>/2023/09/06/2023-chun-hui-bian-shi-yan-tuo-zhan-ti/</url>
      
        <content type="html"><![CDATA[<ol><li>删除一批数据中的重复数据，删除后的一批数据是互不相同的。</li></ol><pre class="line-numbers language-none"><code class="language-none">include irvine32.inc.datadat word 1,2,4,3,2,1p word 6 dup(?).codemain procmov ecx,6mov edx,0mov edi,0again1:mov esi,0mov ax,word ptr dat[edi*2]again2:cmp ax,word ptr p[esi*2]jz nextinc esicmp esi,edxjl again2mov word ptr p[edx*2],axinc edxnext:inc edicmp edi,ecxjnz again1mov esi,0pt:movzx eax,p[esi*2]call writeintcall crlfinc esicmp esi,edxjnz ptexitmain endpend main<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>有一批互不相同的有符号数，求出其中两数和的绝对值的最大值，要求输出最大值，以及这两个数。<br> 第一种（全正或全负）：5, 3, 2, 6, 1，和绝对值最大值是11，两个数是5, 6<br> 第二种（有负有正）：-3，2，-2，-4, 1, 5，和绝对值最大值是7，两个数：-3，-4及2，5</li></ol>  <pre class="line-numbers language-none"><code class="language-none">此代码有所缺陷，只能输出一组。如果有两组等大的，可以排序后比较头两位和尾两位的和的绝对值，如果等大则两组都输出。（我懒得改了include irvine32.inc.datadat dword 5,3,2,6,1max dword 0x dword ?y dword ?count dword ?.codemain procmov ecx,lengthof datmov count,ecxmov ecx,0again1:mov eax,dat[ecx*4]inc ecxcmp ecx,countjz ptmov esi,ecxagain2:mov edx,dat[esi*4]add edx,eaxcmp edx,0jg cpareneg edxcpare:cmp edx,maxjle nextmov max,edxmov edx,dat[esi*4]mov x,edxmov y,eaxnext:inc esicmp esi,countjnz again2cmp esi,countjz again1pt:mov eax,maxcall writeintcall crlfmov eax,xcall writeintcall crlfmov eax,ycall writeintexitmain endpend main<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>  3、从键盘输入两个非0的无符号数，要求用子程序实现<a href="https://so.csdn.net/so/search?q=%E6%B1%82%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%9A%84%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0&spm=1001.2101.3001.7020">求两个数的最大公约数</a>和最小公倍数。</p>  <pre class="line-numbers language-none"><code class="language-none">include irvine32.inc.datax dd ?y dd ?max dd ?min dd ?.codemain proccall readintmov x,eaxcall readintmov y,eaxpush xpush ypush offset maxpush offset mincall mpublicmov eax,maxcall writeintcall crlfmov eax,mincall writeintexitmain endp  mpublic procpush ebpmov ebp,esppush eaxpush ecxpush edxpush ebx mov eax,dword ptr [ebp+20];x的值mov ecx,dword ptr [ebp+16];y的值mov edx,dword ptr [ebp+12];max的地址mov ebx,dword ptr [ebp+8];min的地址again:cmp eax,ecxja nextxchg eax,ecxnext:sub eax,ecxcmp eax,0jnz againmov [edx],ecxmov eax,[ebp+20]mov ecx,[ebp+16]mul cl;x*ymov ecx,[edx]div cl;x*y&#x2F;maxmov [ebx],eax pop ebxpop edxpop ecxpop eaxpop ebpret 16mpublic endpend main<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>  4、从键盘输入字符串，查找是否包含指定子字符串’abc’</p><pre class="line-numbers language-none"><code class="language-none">include irvine32.inc.datadat byte 10 dup(?)count dword ?.codemain procmov edi,0lea edx,datmov ecx,10call readstringmov count,eaxmov esi,0 again:mov ecx,esicmp dat[ecx],61hjnz nextinc ecxcmp dat[ecx],62hjnz nextinc ecxcmp dat[ecx],63hjnz nextinc edijmp ptnext:inc esicmp esi,countjnz againpt:mov eax,edicall writeintexitmain endpend main<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2023春汇编实验</title>
      <link href="/2023/09/06/2023-chun-hui-bian-shi-yan/"/>
      <url>/2023/09/06/2023-chun-hui-bian-shi-yan/</url>
      
        <content type="html"><![CDATA[<p>实验一 熟悉上机环境、顺序程序设计</p><p>1、 上机题目：两个32位数的相加运算   内容： DAT开始的单元中存放两个32位二进制  数，两个数相加后结果存入SUM单元中。   （ SUM为32位 ）  </p><p> DAT  DWORD  X1,X2（自己设定数据）    </p><p>SUM DWORD  ?</p><p>要求： 1）熟悉上机环境              2）熟练掌握简单的顺序程序设计方法</p><pre class="line-numbers language-none"><code class="language-none">include irvine32.inc.data  dat dword 11223344h,44556677h  sum dword ?.code  main proc  mov eax,dword ptr dat  add eax,dword ptr dat+4  mov dword ptr sum,eax  exit  main endp  end main<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>实验  二 分支程序设计  </p><p>1、上机题目：  求最大数  内容：DAT开始的字单元中存放N（N&gt;1）个有符号数，求出最大数存入MAX单元中。</p><p>DAT  word   X1,……,XN（数据自己设定）</p><p>MAX  word   ?</p><p>  要求：熟练掌握分支程序设计方法</p><pre class="line-numbers language-none"><code class="language-none">include irvine32.inc.data  dat word x1,...,x2  max word ?.code  main proc  mov ecx,lengthof dat-1  mov esi,0  mov ax,dat[esi]again:  add esi,2  cmp ax,dat[esi]  jnl next  mov ax,dat[esi]next:  dec ecx  jnz again  mov max,ax  mov eax,dword ptr max  call writeint  exit  main endp  end main<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 实验（三） 循环程序设计</p><p>1、上机题目：数据查找  内容：TAB开始的字节单元中存放N个无符号数，dat单元存放一个已知数据X，现从TAB中查找是否存在数据X，如果存在，NO单元存放该数据在TAB中的序号，否则NO单元存放0FFH 。</p><p>TAB byte   X1,……,XN（数据自己设定）</p><p>dat   byte   x</p><p>no    byte   ?</p><p>要求：1）熟练掌握循环程序设计方法             2）理解循环判断条件    </p><pre class="line-numbers language-none"><code class="language-none">include irvine32.inc.datatab byte x1,....,x2dat byte ?no byte ?.codemain procmov edl,0mov ecx,lengthof tabmov esi,0mov eax,datagain:cmp tab[esi],aljz EXT1inc esiinc dldec ecxcmp ecx,0jnz againEXT1:jecxz Nfoundfound:mov no,dljmp EXT2Nfound:mov no,0ffhEXT2:movsx eax,nocall writeintexitmain endpend main<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上机题目：无符号数排序    </p><p>内容：TAB开始的单元中存放N（N&gt;1）个字节无符号数，请按照从大到小排序后，存入DAT单元中。（注意:TAB数据保持不变）</p><p>TAB  byte   X1,……,XN（数据自己设定）</p><p>DAT  byte   N DUP(?)</p><p>要求：1）熟练掌握循环程序设计方法               2） 理解循环判断条件               3） 熟练掌握双重循环结构</p><pre class="line-numbers language-none"><code class="language-none">include irvine32.inc.datatab byte x1,....,x2dat byte n DUP(?).codemain procmov ecx,lengthof tabcopy:mov al,tab[ecx]mov dat[ecx],alloop copymov al,tab[ecx]mov dat[ecx],almov ecx,lengthof tabdec ecxagain1:mov edi,ecxmov ebx,0again2:mov al,dat[ebx]cmp al,dat[ebx+1]jae nextxchg al,dat[ebx+1]mov dat[ebx],alnext:inc ebxdec ecxcmp ecx,0jnz again2mov ecx,edidec ecxcmp ecx,0jnz again1mov ecx,lengthof datmov esi,0pt:mov al,dat[esi]call writehexcall crlfinc esicmp esi,ecxjnz ptexitmain endpend main<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>实验 四 子程序设计 </p><ol><li>上机题目：代码转换</li></ol><p> 内容：用子程序设计的方法，分别把BUF字单元中的四位十六进制数转换为ASCII码存入MAS开始的单元中，并在终端上显示MAS开始的4个字节单元。</p><p>BUF  word    X</p><p>MAS  byte 4 DUP(?)</p><p>要求：1）熟练掌握子程序设计方法               2）掌握参数传递方法               3）掌握子程序获取参数方法</p><pre class="line-numbers language-none"><code class="language-none">include irvine32.inc.databuf word ?mas byte n dup(?).codemain procpush bufpush offset mascall decbinexitmain endpdecbin procpush ebpmov ebp,esppush esipush eaxpush ecxpush edxpush ebxmov esi,0mov ecx,4mov ebx,[ebp+12]mov edi,[ebp+8]again:mov dx,word ptr [ebx]rol dx,4mov word ptr [ebx],dxand dl,0fhcmp dl,0ahjb numadd dl,7num:add dl,30hmov byte ptr [edi+esi],dlmovzx eax,dlcall writeintcall crlfinc esidec ecxcmp ecx,0jnz againpop edxpop ebxpop ecxpop eaxpop esipop ebpret 8decbin endpend main<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上机题目2：键盘输入</p><p>内容：从键盘输入一串字母并保存在string开始的地址单元，要求将该字符串中的大写字母转化为小写字母后用子程序实现，在终端上依次显示该串字母的 ASCII码。</p><p> string byte   n  dup(?)</p><p>要求：1）熟练掌握子程序设计方法，会画子程序、主程序流程图               2）掌握参数传递方法以及子程序获取参数的方法</p><pre class="line-numbers language-none"><code class="language-none">include irvine32.inc.datastring byte n dup(?)count dd ?.codemain proclea edx,stringmov ecx,10call readestringmov count,eaxcall changemov ecx,0pt:movzx eax,string[ecx]inc ecxcall writeintcall crlfcmp ecx,countjnz ptmain endpchange procpush esipush edxpush ecxpush eaxmov esi,0again1:mov dl,string[esi]cmp dl,61hjnb again2add dl,20hmov string[esi],dlagain2:inc esicmp esi,countjnz again1pop eaxpop ecxpop edxpop esiretchang endpend main<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>实验（五） 综合程序设计</p><p>1、上机题目：将从键盘输入的N个无符号数保存到数组DAT ，找出N个无符号数中的偶数存放到数组P，统计并在终端上显示数组P的数据个数no。  </p><p>DAT  word   n dup (?)  </p><p>P    word   n dup (?)  </p><p>no    word   ？</p><p>要求：1、求偶数数组P的功能用子程序实现              2、画主程序及子程序流程图              3、熟练掌握综合程序设计方法</p><pre class="line-numbers language-none"><code class="language-none">include irvine32.inc.dataDAT word n dup(?)p word n dup(?)no word ?.codemain proccall readintmov ecx,eaxpush ecxmov esi,0cin:call readintmov dat[esi],axadd esi,type datloop cin   ​         push offset dat​         push offset p​         call pno​         mov ax,no​         call writeint​         exit​         main endp​         ​     pno proc​     push ebp​     mov ebp,esp​     push eax​     push ecx​     push edx​     push esx​     push ebx​     mov ecx,[ebp+16]​     mov ebx,[ebp+12]​     mov esi,[ebp+8]​     again1:​     mov dx,[ebx]​     and dl,1​     cmp dl,0​     jne next​     mov dx,[ebx]​     mov [esi],dx​     add esi,type p​     inc no​     next:​     add ebx,type dat     loop again​     pop esx​     pop ebi​     pop edx​     pop ecx​     pop eax​     pop ebp​     ret 12​     pno endp​     end main<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​     2、上机题目：将从键盘输入的N个有符号数保存到数组TAB ，找出N个有符号数中绝对值大于X的最小负奇数存放到Min单元，如果没有找到则Min单元存放0。在终端上显示Min的绝对值。              TAB  Dword   n dup(?)  </p><p>​      X       Dword   xx(无符号数，自己设定)</p><p>​      Min    Dword   ？</p><p>​     要求：1、求数据Min的功能用子程序实现              2、画主程序及子程序流程图              3、熟练掌握综合程序设计方法</p><pre class="line-numbers language-none"><code class="language-none">     include irvine32.inc​     N&#x3D;8​     .data​     tab dd N dup(?)​     x dd 5​     min dd ?​     .code​     main proc​     mov ecx,N​     mov esi,0​     cin:​     call readint​     mov dword ptr tab[esi],eax​     add esi,4​     loop cin​         ​         mov ecx,N​         push ecx​         lea edi,tab​         push edi​         push x​         lea edi,min​         push edi​         call qmin​          ​     mov eax,min​     call writeint​     exit​     main endp​     ​     qmin proc​     push ebp​     mov ebp,esp​     push eax​     push ecx​     push edx​     push edi​     push esi​     ​     mov ecx,dword ptr [ebp+20];N​     mov esi,dword ptr [ebp+16];tab​     mov edi,dword ptr [ebp+12];x​     mov edx,dword ptr [ebp+8];min​     ​     again:​     mov eax,dword ptr [esi]​     test eax,1​     je next​     test eax,8000000h​     je next​     neg eax​     cmp eax,edi​     jbe next​     neg eax​     ​     cmp eax,dword ptr [edx]​     jge next​     mov dword ptr [edx],eax​     ​     next:​     add esi,4​     loop again​         ​         pop esi​         pop edi​         pop edx​         pop ecx​         pop eax​         pop ebp​         ret 16​         qmin endp​         ​     end main<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​     原文链接：<a href="https://blog.csdn.net/Lurume/article/details/129997995">https://blog.csdn.net/Lurume/article/details/129997995</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>一个自动填写问卷小程序</title>
      <link href="/2023/09/06/yi-ge-zi-dong-tian-xie-wen-juan-xiao-cheng-xu/"/>
      <url>/2023/09/06/yi-ge-zi-dong-tian-xie-wen-juan-xiao-cheng-xu/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding = utf-8 -*-</span><span class="token comment"># @Time : 2022/11/2 12:39</span><span class="token comment"># @Author : Lurume</span><span class="token comment"># @File : 自动填写（edge.py</span><span class="token comment"># @Software : PyCharm</span><span class="token keyword">import</span> time<span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver<span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>common<span class="token punctuation">.</span>by <span class="token keyword">import</span> Byurl <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'输入：'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 输入问卷网址</span>option <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>EdgeOptions<span class="token punctuation">(</span><span class="token punctuation">)</span>option<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">'user-agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36 Edg/107.0.1418.26"'</span><span class="token punctuation">)</span>option<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">'--disable-blink-features=AutomationControlled'</span><span class="token punctuation">)</span><span class="token comment">#option.add_experimental_option('excludeSwitches', ['enable-automation'])</span>option<span class="token punctuation">.</span>add_experimental_option<span class="token punctuation">(</span><span class="token string">'useAutomationExtension'</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">)</span>driver <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Edge<span class="token punctuation">(</span>options<span class="token operator">=</span>option<span class="token punctuation">)</span>driver<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span>driver<span class="token punctuation">.</span>find_elements<span class="token punctuation">(</span>By<span class="token punctuation">.</span>CLASS_NAME<span class="token punctuation">,</span> <span class="token string">'ws-textarea__inner'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span><span class="token string">"***"</span><span class="token punctuation">)</span>       <span class="token comment"># 姓名</span>driver<span class="token punctuation">.</span>find_elements<span class="token punctuation">(</span>By<span class="token punctuation">.</span>CLASS_NAME<span class="token punctuation">,</span> <span class="token string">'ws-textarea__inner'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span><span class="token string">"15******75"</span><span class="token punctuation">)</span><span class="token comment"># 填写电话号码</span>driver<span class="token punctuation">.</span>find_elements<span class="token punctuation">(</span>By<span class="token punctuation">.</span>CLASS_NAME<span class="token punctuation">,</span> <span class="token string">'ws-textarea__inner'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span><span class="token string">"10******1"</span><span class="token punctuation">)</span> <span class="token comment"># 学号</span>driver<span class="token punctuation">.</span>find_elements<span class="token punctuation">(</span>By<span class="token punctuation">.</span>CLASS_NAME<span class="token punctuation">,</span> <span class="token string">'ws-textarea__inner'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span><span class="token string">"20*******2"</span><span class="token punctuation">)</span><span class="token comment"># QQ号</span>button <span class="token operator">=</span> driver<span class="token punctuation">.</span>find_elements<span class="token punctuation">(</span>By<span class="token punctuation">.</span>CLASS_NAME<span class="token punctuation">,</span> <span class="token string">'ws-radio__input'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>driver<span class="token punctuation">.</span>execute_script<span class="token punctuation">(</span><span class="token string">"arguments[0].click();"</span><span class="token punctuation">,</span> button<span class="token punctuation">)</span> <span class="token comment"># 勾选按钮</span>bt <span class="token operator">=</span> driver<span class="token punctuation">.</span>find_elements<span class="token punctuation">(</span>By<span class="token punctuation">.</span>CLASS_NAME<span class="token punctuation">,</span> <span class="token string">'ws-radio__input'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>driver<span class="token punctuation">.</span>execute_script<span class="token punctuation">(</span><span class="token string">"arguments[0].click();"</span><span class="token punctuation">,</span> bt<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上代码是我在去年抢核酸志愿者时，利用selenium加上当时所掌握的一点点前端知识编写的，非常的简陋，但这是我第一次将代码实际应用起来，纪念一下。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
