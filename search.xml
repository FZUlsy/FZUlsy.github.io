<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>2023春汇编实验（拓展题）</title>
      <link href="/2023/09/06/2023-chun-hui-bian-shi-yan-tuo-zhan-ti/"/>
      <url>/2023/09/06/2023-chun-hui-bian-shi-yan-tuo-zhan-ti/</url>
      
        <content type="html"><![CDATA[<ol><li>删除一批数据中的重复数据，删除后的一批数据是互不相同的。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">include irvine32.inc</span><br><span class="line">.data</span><br><span class="line">dat word 1,2,4,3,2,1</span><br><span class="line">p word 6 dup(?)</span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">mov ecx,6</span><br><span class="line">mov edx,0</span><br><span class="line">mov edi,0</span><br><span class="line">again1:</span><br><span class="line">mov esi,0</span><br><span class="line">mov ax,word ptr dat[edi*2]</span><br><span class="line">again2:</span><br><span class="line">cmp ax,word ptr p[esi*2]</span><br><span class="line">jz next</span><br><span class="line">inc esi</span><br><span class="line">cmp esi,edx</span><br><span class="line">jl again2</span><br><span class="line">mov word ptr p[edx*2],ax</span><br><span class="line">inc edx</span><br><span class="line">next:</span><br><span class="line">inc edi</span><br><span class="line">cmp edi,ecx</span><br><span class="line">jnz again1</span><br><span class="line">mov esi,0</span><br><span class="line">pt:</span><br><span class="line">movzx eax,p[esi*2]</span><br><span class="line">call writeint</span><br><span class="line">call crlf</span><br><span class="line">inc esi</span><br><span class="line">cmp esi,edx</span><br><span class="line">jnz pt</span><br><span class="line"></span><br><span class="line">exit</span><br><span class="line">main endp</span><br><span class="line">end main</span><br></pre></td></tr></table></figure><ol start="2"><li>有一批互不相同的有符号数，求出其中两数和的绝对值的最大值，要求输出最大值，以及这两个数。<br> 第一种（全正或全负）：5, 3, 2, 6, 1，和绝对值最大值是11，两个数是5, 6<br> 第二种（有负有正）：-3，2，-2，-4, 1, 5，和绝对值最大值是7，两个数：-3，-4及2，5</li></ol>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">此代码有所缺陷，只能输出一组。如果有两组等大的，可以排序后比较头两位和尾两位的和的绝对值，如果等大则两组都输出。（我懒得改了</span><br><span class="line">include irvine32.inc</span><br><span class="line">.data</span><br><span class="line">dat dword 5,3,2,6,1</span><br><span class="line">max dword 0</span><br><span class="line">x dword ?</span><br><span class="line">y dword ?</span><br><span class="line">count dword ?</span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">mov ecx,lengthof dat</span><br><span class="line">mov count,ecx</span><br><span class="line">mov ecx,0</span><br><span class="line">again1:</span><br><span class="line">mov eax,dat[ecx*4]</span><br><span class="line">inc ecx</span><br><span class="line">cmp ecx,count</span><br><span class="line">jz pt</span><br><span class="line">mov esi,ecx</span><br><span class="line">again2:</span><br><span class="line">mov edx,dat[esi*4]</span><br><span class="line">add edx,eax</span><br><span class="line">cmp edx,0</span><br><span class="line">jg cpare</span><br><span class="line">neg edx</span><br><span class="line">cpare:</span><br><span class="line">cmp edx,max</span><br><span class="line">jle next</span><br><span class="line">mov max,edx</span><br><span class="line">mov edx,dat[esi*4]</span><br><span class="line">mov x,edx</span><br><span class="line">mov y,eax</span><br><span class="line">next:</span><br><span class="line">inc esi</span><br><span class="line">cmp esi,count</span><br><span class="line">jnz again2</span><br><span class="line">cmp esi,count</span><br><span class="line">jz again1</span><br><span class="line">pt:</span><br><span class="line">mov eax,max</span><br><span class="line">call writeint</span><br><span class="line">call crlf</span><br><span class="line">mov eax,x</span><br><span class="line">call writeint</span><br><span class="line">call crlf</span><br><span class="line">mov eax,y</span><br><span class="line">call writeint</span><br><span class="line"></span><br><span class="line">exit</span><br><span class="line">main endp</span><br><span class="line">end main</span><br></pre></td></tr></table></figure><p>  3、从键盘输入两个非0的无符号数，要求用子程序实现<a href="https://so.csdn.net/so/search?q=%E6%B1%82%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%9A%84%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0&spm=1001.2101.3001.7020">求两个数的最大公约数</a>和最小公倍数。</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">include irvine32.inc</span><br><span class="line">.data</span><br><span class="line">x dd ?</span><br><span class="line">y dd ?</span><br><span class="line">max dd ?</span><br><span class="line">min dd ?</span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">call readint</span><br><span class="line">mov x,eax</span><br><span class="line">call readint</span><br><span class="line">mov y,eax</span><br><span class="line"></span><br><span class="line">push x</span><br><span class="line">push y</span><br><span class="line">push offset max</span><br><span class="line">push offset min</span><br><span class="line">call mpublic</span><br><span class="line"></span><br><span class="line">mov eax,max</span><br><span class="line">call writeint</span><br><span class="line">call crlf</span><br><span class="line">mov eax,min</span><br><span class="line">call writeint</span><br><span class="line">exit</span><br><span class="line">main endp</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">mpublic proc</span><br><span class="line">push ebp</span><br><span class="line">mov ebp,esp</span><br><span class="line">push eax</span><br><span class="line">push ecx</span><br><span class="line">push edx</span><br><span class="line">push ebx</span><br><span class="line"> </span><br><span class="line">mov eax,dword ptr [ebp+20];x的值</span><br><span class="line">mov ecx,dword ptr [ebp+16];y的值</span><br><span class="line">mov edx,dword ptr [ebp+12];max的地址</span><br><span class="line">mov ebx,dword ptr [ebp+8];min的地址</span><br><span class="line">again:</span><br><span class="line">cmp eax,ecx</span><br><span class="line">ja next</span><br><span class="line">xchg eax,ecx</span><br><span class="line">next:</span><br><span class="line">sub eax,ecx</span><br><span class="line">cmp eax,0</span><br><span class="line">jnz again</span><br><span class="line">mov [edx],ecx</span><br><span class="line"></span><br><span class="line">mov eax,[ebp+20]</span><br><span class="line">mov ecx,[ebp+16]</span><br><span class="line">mul cl;x*y</span><br><span class="line">mov ecx,[edx]</span><br><span class="line">div cl;x*y/max</span><br><span class="line">mov [ebx],eax</span><br><span class="line"> </span><br><span class="line">pop ebx</span><br><span class="line">pop edx</span><br><span class="line">pop ecx</span><br><span class="line">pop eax</span><br><span class="line">pop ebp</span><br><span class="line">ret 16</span><br><span class="line">mpublic endp</span><br><span class="line">end main</span><br></pre></td></tr></table></figure><p>  4、从键盘输入字符串，查找是否包含指定子字符串’abc’</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">include irvine32.inc</span><br><span class="line">.data</span><br><span class="line">dat byte 10 dup(?)</span><br><span class="line">count dword ?</span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">mov edi,0</span><br><span class="line">lea edx,dat</span><br><span class="line">mov ecx,10</span><br><span class="line">call readstring</span><br><span class="line">mov count,eax</span><br><span class="line">mov esi,0</span><br><span class="line"> </span><br><span class="line">again:</span><br><span class="line">mov ecx,esi</span><br><span class="line">cmp dat[ecx],61h</span><br><span class="line">jnz next</span><br><span class="line">inc ecx</span><br><span class="line">cmp dat[ecx],62h</span><br><span class="line">jnz next</span><br><span class="line">inc ecx</span><br><span class="line">cmp dat[ecx],63h</span><br><span class="line">jnz next</span><br><span class="line">inc edi</span><br><span class="line">jmp pt</span><br><span class="line">next:</span><br><span class="line">inc esi</span><br><span class="line">cmp esi,count</span><br><span class="line">jnz again</span><br><span class="line">pt:</span><br><span class="line">mov eax,edi</span><br><span class="line">call writeint</span><br><span class="line"></span><br><span class="line">exit</span><br><span class="line">main endp</span><br><span class="line">end main</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2023春汇编实验</title>
      <link href="/2023/09/06/2023-chun-hui-bian-shi-yan/"/>
      <url>/2023/09/06/2023-chun-hui-bian-shi-yan/</url>
      
        <content type="html"><![CDATA[<p>实验一 熟悉上机环境、顺序程序设计</p><p>1、 上机题目：两个32位数的相加运算   内容： DAT开始的单元中存放两个32位二进制  数，两个数相加后结果存入SUM单元中。   （ SUM为32位 ）  </p><p> DAT  DWORD  X1,X2（自己设定数据）    </p><p>SUM DWORD  ?</p><p>要求： 1）熟悉上机环境              2）熟练掌握简单的顺序程序设计方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">include irvine32.inc</span><br><span class="line">.data</span><br><span class="line">  dat dword 11223344h,44556677h</span><br><span class="line">  sum dword ?</span><br><span class="line">.code</span><br><span class="line">  main proc</span><br><span class="line">  mov eax,dword ptr dat</span><br><span class="line">  add eax,dword ptr dat+4</span><br><span class="line">  mov dword ptr sum,eax</span><br><span class="line">  exit</span><br><span class="line">  main endp</span><br><span class="line">  end main</span><br></pre></td></tr></table></figure><p>实验  二 分支程序设计  </p><p>1、上机题目：  求最大数  内容：DAT开始的字单元中存放N（N&gt;1）个有符号数，求出最大数存入MAX单元中。</p><p>DAT  word   X1,……,XN（数据自己设定）</p><p>MAX  word   ?</p><p>  要求：熟练掌握分支程序设计方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">include irvine32.inc</span><br><span class="line">.data</span><br><span class="line">  dat word x1,...,x2</span><br><span class="line">  max word ?</span><br><span class="line">.code</span><br><span class="line">  main proc</span><br><span class="line">  mov ecx,lengthof dat-1</span><br><span class="line">  mov esi,0</span><br><span class="line">  mov ax,dat[esi]</span><br><span class="line">again:</span><br><span class="line">  add esi,2</span><br><span class="line">  cmp ax,dat[esi]</span><br><span class="line">  jnl next</span><br><span class="line">  mov ax,dat[esi]</span><br><span class="line">next:</span><br><span class="line">  dec ecx</span><br><span class="line">  jnz again</span><br><span class="line">  mov max,ax</span><br><span class="line">  mov eax,dword ptr max</span><br><span class="line">  call writeint</span><br><span class="line"></span><br><span class="line">  exit</span><br><span class="line">  main endp</span><br><span class="line">  end main</span><br></pre></td></tr></table></figure><p> 实验（三） 循环程序设计</p><p>1、上机题目：数据查找  内容：TAB开始的字节单元中存放N个无符号数，dat单元存放一个已知数据X，现从TAB中查找是否存在数据X，如果存在，NO单元存放该数据在TAB中的序号，否则NO单元存放0FFH 。</p><p>TAB byte   X1,……,XN（数据自己设定）</p><p>dat   byte   x</p><p>no    byte   ?</p><p>要求：1）熟练掌握循环程序设计方法             2）理解循环判断条件    </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">include irvine32.inc</span><br><span class="line">.data</span><br><span class="line">tab byte x1,....,x2</span><br><span class="line">dat byte ?</span><br><span class="line">no byte ?</span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">mov edl,0</span><br><span class="line">mov ecx,lengthof tab</span><br><span class="line">mov esi,0</span><br><span class="line">mov eax,dat</span><br><span class="line">again:</span><br><span class="line">cmp tab[esi],al</span><br><span class="line">jz EXT1</span><br><span class="line">inc esi</span><br><span class="line">inc dl</span><br><span class="line">dec ecx</span><br><span class="line">cmp ecx,0</span><br><span class="line">jnz again</span><br><span class="line">EXT1:</span><br><span class="line">jecxz Nfound</span><br><span class="line">found:</span><br><span class="line">mov no,dl</span><br><span class="line">jmp EXT2</span><br><span class="line">Nfound:</span><br><span class="line">mov no,0ffh</span><br><span class="line">EXT2:</span><br><span class="line">movsx eax,no</span><br><span class="line">call writeint</span><br><span class="line">exit</span><br><span class="line">main endp</span><br><span class="line">end main</span><br></pre></td></tr></table></figure><p>上机题目：无符号数排序    </p><p>内容：TAB开始的单元中存放N（N&gt;1）个字节无符号数，请按照从大到小排序后，存入DAT单元中。（注意:TAB数据保持不变）</p><p>TAB  byte   X1,……,XN（数据自己设定）</p><p>DAT  byte   N DUP(?)</p><p>要求：1）熟练掌握循环程序设计方法               2） 理解循环判断条件               3） 熟练掌握双重循环结构</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">include irvine32.inc</span><br><span class="line">.data</span><br><span class="line">tab byte x1,....,x2</span><br><span class="line">dat byte n DUP(?)</span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">mov ecx,lengthof tab</span><br><span class="line">copy:</span><br><span class="line">mov al,tab[ecx]</span><br><span class="line">mov dat[ecx],al</span><br><span class="line">loop copy</span><br><span class="line">mov al,tab[ecx]</span><br><span class="line">mov dat[ecx],al</span><br><span class="line">mov ecx,lengthof tab</span><br><span class="line">dec ecx</span><br><span class="line">again1:</span><br><span class="line">mov edi,ecx</span><br><span class="line">mov ebx,0</span><br><span class="line">again2:</span><br><span class="line">mov al,dat[ebx]</span><br><span class="line">cmp al,dat[ebx+1]</span><br><span class="line">jae next</span><br><span class="line">xchg al,dat[ebx+1]</span><br><span class="line">mov dat[ebx],al</span><br><span class="line">next:</span><br><span class="line">inc ebx</span><br><span class="line">dec ecx</span><br><span class="line">cmp ecx,0</span><br><span class="line">jnz again2</span><br><span class="line">mov ecx,edi</span><br><span class="line">dec ecx</span><br><span class="line">cmp ecx,0</span><br><span class="line">jnz again1</span><br><span class="line">mov ecx,lengthof dat</span><br><span class="line">mov esi,0</span><br><span class="line">pt:</span><br><span class="line">mov al,dat[esi]</span><br><span class="line">call writehex</span><br><span class="line">call crlf</span><br><span class="line">inc esi</span><br><span class="line">cmp esi,ecx</span><br><span class="line">jnz pt</span><br><span class="line">exit</span><br><span class="line">main endp</span><br><span class="line">end main</span><br></pre></td></tr></table></figure><p>实验 四 子程序设计 </p><ol><li>上机题目：代码转换</li></ol><p> 内容：用子程序设计的方法，分别把BUF字单元中的四位十六进制数转换为ASCII码存入MAS开始的单元中，并在终端上显示MAS开始的4个字节单元。</p><p>BUF  word    X</p><p>MAS  byte 4 DUP(?)</p><p>要求：1）熟练掌握子程序设计方法               2）掌握参数传递方法               3）掌握子程序获取参数方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">include irvine32.inc</span><br><span class="line">.data</span><br><span class="line">buf word ?</span><br><span class="line">mas byte n dup(?)</span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">push buf</span><br><span class="line">push offset mas</span><br><span class="line">call decbin</span><br><span class="line">exit</span><br><span class="line">main endp</span><br><span class="line">decbin proc</span><br><span class="line">push ebp</span><br><span class="line">mov ebp,esp</span><br><span class="line">push esi</span><br><span class="line">push eax</span><br><span class="line">push ecx</span><br><span class="line">push edx</span><br><span class="line">push ebx</span><br><span class="line">mov esi,0</span><br><span class="line">mov ecx,4</span><br><span class="line">mov ebx,[ebp+12]</span><br><span class="line">mov edi,[ebp+8]</span><br><span class="line">again:</span><br><span class="line">mov dx,word ptr [ebx]</span><br><span class="line">rol dx,4</span><br><span class="line">mov word ptr [ebx],dx</span><br><span class="line">and dl,0fh</span><br><span class="line">cmp dl,0ah</span><br><span class="line">jb num</span><br><span class="line">add dl,7</span><br><span class="line">num:</span><br><span class="line">add dl,30h</span><br><span class="line">mov byte ptr [edi+esi],dl</span><br><span class="line">movzx eax,dl</span><br><span class="line">call writeint</span><br><span class="line">call crlf</span><br><span class="line">inc esi</span><br><span class="line">dec ecx</span><br><span class="line">cmp ecx,0</span><br><span class="line">jnz again</span><br><span class="line">pop edx</span><br><span class="line">pop ebx</span><br><span class="line">pop ecx</span><br><span class="line">pop eax</span><br><span class="line">pop esi</span><br><span class="line">pop ebp</span><br><span class="line">ret 8</span><br><span class="line">decbin endp</span><br><span class="line">end main</span><br></pre></td></tr></table></figure><p>上机题目2：键盘输入</p><p>内容：从键盘输入一串字母并保存在string开始的地址单元，要求将该字符串中的大写字母转化为小写字母后用子程序实现，在终端上依次显示该串字母的 ASCII码。</p><p> string byte   n  dup(?)</p><p>要求：1）熟练掌握子程序设计方法，会画子程序、主程序流程图               2）掌握参数传递方法以及子程序获取参数的方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">include irvine32.inc</span><br><span class="line">.data</span><br><span class="line">string byte n dup(?)</span><br><span class="line">count dd ?</span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">lea edx,string</span><br><span class="line">mov ecx,10</span><br><span class="line">call readestring</span><br><span class="line">mov count,eax</span><br><span class="line">call change</span><br><span class="line">mov ecx,0</span><br><span class="line"></span><br><span class="line">pt:</span><br><span class="line">movzx eax,string[ecx]</span><br><span class="line">inc ecx</span><br><span class="line">call writeint</span><br><span class="line">call crlf</span><br><span class="line">cmp ecx,count</span><br><span class="line">jnz pt</span><br><span class="line">main endp</span><br><span class="line">change proc</span><br><span class="line">push esi</span><br><span class="line">push edx</span><br><span class="line">push ecx</span><br><span class="line">push eax</span><br><span class="line">mov esi,0</span><br><span class="line">again1:</span><br><span class="line">mov dl,string[esi]</span><br><span class="line">cmp dl,61h</span><br><span class="line">jnb again2</span><br><span class="line">add dl,20h</span><br><span class="line">mov string[esi],dl</span><br><span class="line">again2:</span><br><span class="line">inc esi</span><br><span class="line">cmp esi,count</span><br><span class="line">jnz again1</span><br><span class="line">pop eax</span><br><span class="line">pop ecx</span><br><span class="line">pop edx</span><br><span class="line">pop esi</span><br><span class="line">ret</span><br><span class="line">chang endp</span><br><span class="line">end main</span><br></pre></td></tr></table></figure><p>实验（五） 综合程序设计</p><p>1、上机题目：将从键盘输入的N个无符号数保存到数组DAT ，找出N个无符号数中的偶数存放到数组P，统计并在终端上显示数组P的数据个数no。  </p><p>DAT  word   n dup (?)  </p><p>P    word   n dup (?)  </p><p>no    word   ？</p><p>要求：1、求偶数数组P的功能用子程序实现              2、画主程序及子程序流程图              3、熟练掌握综合程序设计方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">include irvine32.inc</span><br><span class="line">.data</span><br><span class="line">DAT word n dup(?)</span><br><span class="line">p word n dup(?)</span><br><span class="line">no word ?</span><br><span class="line">.code</span><br><span class="line">main proc</span><br><span class="line">call readint</span><br><span class="line">mov ecx,eax</span><br><span class="line">push ecx</span><br><span class="line">mov esi,0</span><br><span class="line">cin:</span><br><span class="line">call readint</span><br><span class="line">mov dat[esi],ax</span><br><span class="line">add esi,type dat</span><br><span class="line">loop cin</span><br><span class="line"></span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">​         push offset dat</span><br><span class="line">​         push offset p</span><br><span class="line">​         call pno</span><br><span class="line">​         mov ax,no</span><br><span class="line">​         call writeint</span><br><span class="line">​         exit</span><br><span class="line">​         main endp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">​         </span><br><span class="line"></span><br><span class="line">​     pno proc</span><br><span class="line">​     push ebp</span><br><span class="line">​     mov ebp,esp</span><br><span class="line">​     push eax</span><br><span class="line">​     push ecx</span><br><span class="line">​     push edx</span><br><span class="line">​     push esx</span><br><span class="line">​     push ebx</span><br><span class="line">​     mov ecx,[ebp+16]</span><br><span class="line">​     mov ebx,[ebp+12]</span><br><span class="line">​     mov esi,[ebp+8]</span><br><span class="line">​     again1:</span><br><span class="line">​     mov dx,[ebx]</span><br><span class="line">​     and dl,1</span><br><span class="line">​     cmp dl,0</span><br><span class="line">​     jne next</span><br><span class="line">​     mov dx,[ebx]</span><br><span class="line">​     mov [esi],dx</span><br><span class="line">​     add esi,type p</span><br><span class="line">​     inc no</span><br><span class="line">​     next:</span><br><span class="line">​     add ebx,type dat</span><br><span class="line">     loop again</span><br><span class="line">​     pop esx</span><br><span class="line">​     pop ebi</span><br><span class="line">​     pop edx</span><br><span class="line">​     pop ecx</span><br><span class="line">​     pop eax</span><br><span class="line">​     pop ebp</span><br><span class="line">​     ret 12</span><br><span class="line">​     pno endp</span><br><span class="line">​     end main</span><br></pre></td></tr></table></figure><p>​     2、上机题目：将从键盘输入的N个有符号数保存到数组TAB ，找出N个有符号数中绝对值大于X的最小负奇数存放到Min单元，如果没有找到则Min单元存放0。在终端上显示Min的绝对值。              TAB  Dword   n dup(?)  </p><p>​      X       Dword   xx(无符号数，自己设定)</p><p>​      Min    Dword   ？</p><p>​     要求：1、求数据Min的功能用子程序实现              2、画主程序及子程序流程图              3、熟练掌握综合程序设计方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">     include irvine32.inc</span><br><span class="line">​     N=8</span><br><span class="line">​     .data</span><br><span class="line">​     tab dd N dup(?)</span><br><span class="line">​     x dd 5</span><br><span class="line">​     min dd ?</span><br><span class="line">​     .code</span><br><span class="line">​     main proc</span><br><span class="line">​     mov ecx,N</span><br><span class="line">​     mov esi,0</span><br><span class="line">​     cin:</span><br><span class="line">​     call readint</span><br><span class="line">​     mov dword ptr tab[esi],eax</span><br><span class="line">​     add esi,4</span><br><span class="line">​     loop cin</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">​         </span><br><span class="line">​         mov ecx,N</span><br><span class="line">​         push ecx</span><br><span class="line">​         lea edi,tab</span><br><span class="line">​         push edi</span><br><span class="line">​         push x</span><br><span class="line">​         lea edi,min</span><br><span class="line">​         push edi</span><br><span class="line">​         call qmin</span><br><span class="line">​          </span><br><span class="line"></span><br><span class="line">​     mov eax,min</span><br><span class="line">​     call writeint</span><br><span class="line">​     exit</span><br><span class="line">​     main endp</span><br><span class="line">​     </span><br><span class="line">​     qmin proc</span><br><span class="line">​     push ebp</span><br><span class="line">​     mov ebp,esp</span><br><span class="line">​     push eax</span><br><span class="line">​     push ecx</span><br><span class="line">​     push edx</span><br><span class="line">​     push edi</span><br><span class="line">​     push esi</span><br><span class="line">​     </span><br><span class="line">​     mov ecx,dword ptr [ebp+20];N</span><br><span class="line">​     mov esi,dword ptr [ebp+16];tab</span><br><span class="line">​     mov edi,dword ptr [ebp+12];x</span><br><span class="line">​     mov edx,dword ptr [ebp+8];min</span><br><span class="line">​     </span><br><span class="line">​     again:</span><br><span class="line">​     mov eax,dword ptr [esi]</span><br><span class="line">​     test eax,1</span><br><span class="line">​     je next</span><br><span class="line">​     test eax,8000000h</span><br><span class="line">​     je next</span><br><span class="line">​     neg eax</span><br><span class="line">​     cmp eax,edi</span><br><span class="line">​     jbe next</span><br><span class="line">​     neg eax</span><br><span class="line">​     </span><br><span class="line">​     cmp eax,dword ptr [edx]</span><br><span class="line">​     jge next</span><br><span class="line">​     mov dword ptr [edx],eax</span><br><span class="line">​     </span><br><span class="line">​     next:</span><br><span class="line">​     add esi,4</span><br><span class="line">​     loop again</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">​         </span><br><span class="line">​         pop esi</span><br><span class="line">​         pop edi</span><br><span class="line">​         pop edx</span><br><span class="line">​         pop ecx</span><br><span class="line">​         pop eax</span><br><span class="line">​         pop ebp</span><br><span class="line">​         ret 16</span><br><span class="line">​         qmin endp</span><br><span class="line">​         </span><br><span class="line"></span><br><span class="line">​     end main</span><br></pre></td></tr></table></figure><p>​     原文链接：<a href="https://blog.csdn.net/Lurume/article/details/129997995">https://blog.csdn.net/Lurume/article/details/129997995</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>7-1 字符串关键字的散列映射</title>
      <link href="/2023/09/06/7-1-zi-fu-chuan-guan-jian-zi-de-san-lie-ying-she/"/>
      <url>/2023/09/06/7-1-zi-fu-chuan-guan-jian-zi-de-san-lie-ying-she/</url>
      
        <content type="html"><![CDATA[<p>给定一系列由大写英文字母组成的字符串关键字和素数P，用移位法定义的散列函数H(Key)将关键字Key中的最后3个字符映射为整数，每个字符占5位；再用除留余数法将整数映射到长度为P的散列表中。例如将字符串AZDEG插入长度为1009的散列表中，我们首先将26个大写英文字母顺序映射到整数0~25；再通过移位将其映射为3×322+4×32+6&#x3D;3206；然后根据表长得到3206%1009&#x3D;179，即是该字符串的散列映射位置。</p><p>发生冲突时请用平方探测法解决。</p><p>输入格式:<br>输入第一行首先给出两个正整数N（≤500）和P（≥2N的最小素数），分别为待插入的关键字总数、以及散列表的长度。第二行给出N个字符串关键字，每个长度不超过8位，其间以空格分隔。</p><p>输出格式:<br>在一行内输出每个字符串关键字在散列表中的位置。数字间以空格分隔，但行末尾不得有多余空格。</p><p>输入样例1:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4 11</span><br><span class="line">HELLO ANNK ZOE LOLI</span><br></pre></td></tr></table></figure><p>输出样例1:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 10 4 0</span><br></pre></td></tr></table></figure><p>输入样例2:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">6 11</span><br><span class="line"></span><br><span class="line">LLO ANNA NNK ZOJ INNK AAA</span><br></pre></td></tr></table></figure><p>输出样例2:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 0 10 9 6 1</span><br></pre></td></tr></table></figure><h5 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;bits/stdc++.h&gt;</span><br><span class="line">using namespace std;</span><br><span class="line"> </span><br><span class="line">int inshe(string s)</span><br><span class="line">&#123;</span><br><span class="line">    int sum = 0;</span><br><span class="line">    reverse(s.begin(),s.end());</span><br><span class="line">    int cnt = 0;</span><br><span class="line">    for(auto i : s)</span><br><span class="line">    &#123;</span><br><span class="line">        sum += (i-&#x27;A&#x27;)*pow(32, cnt);</span><br><span class="line">        cnt ++;</span><br><span class="line">        if(cnt == 3)break;</span><br><span class="line">    &#125;</span><br><span class="line">    return sum;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int n,m;</span><br><span class="line">    unordered_map&lt;string, int&gt;s;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    string k;</span><br><span class="line">    int p[m];</span><br><span class="line">    memset(p,-1,sizeof(p));</span><br><span class="line">    for(int i = 0;i &lt; n;i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; k;</span><br><span class="line">        if(s.count(k)) &#123; cout &lt;&lt; s[k]; continue; &#125;</span><br><span class="line">        int dev = inshe(k)%m;</span><br><span class="line">        if(p[dev] != -1)</span><br><span class="line">        &#123;</span><br><span class="line">            int a = 1,b = dev;</span><br><span class="line">            while(p[dev] != -1)</span><br><span class="line">            &#123;</span><br><span class="line">                dev = (b + a*a)%m;</span><br><span class="line">                if(p[dev] == -1) break;</span><br><span class="line">                dev = (b - a*a+m)%m;</span><br><span class="line">                a ++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        p[dev] ++;</span><br><span class="line">        s[k] = dev;</span><br><span class="line">        cout &lt;&lt; dev;</span><br><span class="line">        if(i &lt; n-1)cout &lt;&lt; &quot; &quot;;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>一个自动填写问卷小程序</title>
      <link href="/2023/09/06/yi-ge-zi-dong-tian-xie-wen-juan-xiao-cheng-xu/"/>
      <url>/2023/09/06/yi-ge-zi-dong-tian-xie-wen-juan-xiao-cheng-xu/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding = utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time : 2022/11/2 12:39</span></span><br><span class="line"><span class="comment"># @Author : Lurume</span></span><br><span class="line"><span class="comment"># @File : 自动填写（edge.py</span></span><br><span class="line"><span class="comment"># @Software : PyCharm</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"></span><br><span class="line">url = <span class="built_in">str</span>(<span class="built_in">input</span>(<span class="string">&#x27;输入：&#x27;</span>))<span class="comment"># 输入问卷网址</span></span><br><span class="line">option = webdriver.EdgeOptions()</span><br><span class="line">option.add_argument(<span class="string">&#x27;user-agent=&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36 Edg/107.0.1418.26&quot;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">option.add_argument(<span class="string">&#x27;--disable-blink-features=AutomationControlled&#x27;</span>)</span><br><span class="line"><span class="comment">#option.add_experimental_option(&#x27;excludeSwitches&#x27;, [&#x27;enable-automation&#x27;])</span></span><br><span class="line">option.add_experimental_option(<span class="string">&#x27;useAutomationExtension&#x27;</span>, <span class="literal">False</span>)</span><br><span class="line">driver = webdriver.Edge(options=option)</span><br><span class="line">driver.get(url)</span><br><span class="line">time.sleep(<span class="number">0.1</span>)</span><br><span class="line"></span><br><span class="line">driver.find_elements(By.CLASS_NAME, <span class="string">&#x27;ws-textarea__inner&#x27;</span>)[<span class="number">0</span>].send_keys(<span class="string">&quot;***&quot;</span>)       <span class="comment"># 姓名</span></span><br><span class="line">driver.find_elements(By.CLASS_NAME, <span class="string">&#x27;ws-textarea__inner&#x27;</span>)[<span class="number">1</span>].send_keys(<span class="string">&quot;15******75&quot;</span>)<span class="comment"># 填写电话号码</span></span><br><span class="line">driver.find_elements(By.CLASS_NAME, <span class="string">&#x27;ws-textarea__inner&#x27;</span>)[<span class="number">2</span>].send_keys(<span class="string">&quot;10******1&quot;</span>) <span class="comment"># 学号</span></span><br><span class="line">driver.find_elements(By.CLASS_NAME, <span class="string">&#x27;ws-textarea__inner&#x27;</span>)[<span class="number">3</span>].send_keys(<span class="string">&quot;20*******2&quot;</span>)<span class="comment"># QQ号</span></span><br><span class="line"></span><br><span class="line">button = driver.find_elements(By.CLASS_NAME, <span class="string">&#x27;ws-radio__input&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">driver.execute_script(<span class="string">&quot;arguments[0].click();&quot;</span>, button) <span class="comment"># 勾选按钮</span></span><br><span class="line"></span><br><span class="line">bt = driver.find_elements(By.CLASS_NAME, <span class="string">&#x27;ws-radio__input&#x27;</span>)[-<span class="number">1</span>]</span><br><span class="line">driver.execute_script(<span class="string">&quot;arguments[0].click();&quot;</span>, bt)</span><br></pre></td></tr></table></figure><p>以上代码是我在去年抢核酸志愿者时，利用selenium加上当时所掌握的一点点前端知识编写的，非常的简陋，但这是我第一次将代码实际应用起来，纪念一下。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
